@model AdunbiKiddies.Models.Product
@using AdunbiKiddies.Extensions

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoriesId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
        <div class="control-label col-md-2">BarCode Number </div>
        <div class="col-md-6">
            @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control", @id = "BarcodeInput" } })
            <br>
            <div class="test">
                <input id="scannerInput" type="text" value="barcodescan" autofocus />
            </div>
        </div>
    </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InternalImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.InternalImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InternalImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <h3 class="control-label col-md-2">Upload Image</h3>
            <div class="col-md-6">
                @Html.FileFor(model => model.File)
                @Html.ValidationMessageFor(model => model.File)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-6">
                <input type="submit" value="Edit Product" class="btn btn-default btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.6.2.min.js"></script>
<script type="text/javascript">
    $(document).scannerDetection({

        //https://github.com/kabachello/jQuery-Scanner-Detection

        timeBeforeScanTest: 200, // wait for the next character for upto 200ms
        avgTimeByChar: 40, // it's not a barcode if a character takes longer than 60ms
        preventDefault: true,

        endChar: [13],
        onComplete: function (barcode, qty) {
            validScan = true;

            $('#scannerInput').val(barcode);

        } // main callback function ,
        ,
        onError: function (string, qty) {

            $('#BarcodeInput').val($('#BarcodeInput').val() + string);

        }
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}